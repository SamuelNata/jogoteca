// <auto-generated />
using System;
using Jogoteca.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Jogoteca.Web.Migrations
{
    [DbContext(typeof(JogotecaDbContext))]
    [Migration("20201101081323_InitialMigrations")]
    partial class InitialMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Jogoteca.Models.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150);

                    b.Property<short?>("Year")
                        .HasColumnName("year")
                        .HasColumnType("smallint");

                    b.HasKey("Id")
                        .HasName("pk_games");

                    b.ToTable("games");
                });

            modelBuilder.Entity("Jogoteca.Models.Entities.GameBorrowing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BorrowedGameId")
                        .HasColumnName("borrowed_game_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GameBorrowerId")
                        .HasColumnName("game_borrower_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GameOwnerId")
                        .HasColumnName("game_owner_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("PredictedEndDate")
                        .HasColumnName("predicted_end_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("RealEndDate")
                        .HasColumnName("real_end_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("StartDate")
                        .HasColumnName("start_date")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id")
                        .HasName("pk_game_borrowings");

                    b.HasIndex("BorrowedGameId")
                        .HasName("ix_game_borrowings_borrowed_game_id");

                    b.HasIndex("GameBorrowerId")
                        .HasName("ix_game_borrowings_game_borrower_id");

                    b.HasIndex("GameOwnerId")
                        .HasName("ix_game_borrowings_game_owner_id");

                    b.ToTable("game_borrowings");
                });

            modelBuilder.Entity("Jogoteca.Models.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Jogoteca.Models.Entities.UserGame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("GameId")
                        .HasColumnName("game_id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_user_games");

                    b.HasIndex("GameId")
                        .HasName("ix_user_games_game_id");

                    b.HasIndex("UserId")
                        .HasName("ix_user_games_user_id");

                    b.ToTable("user_games");
                });

            modelBuilder.Entity("Jogoteca.Models.Entities.GameBorrowing", b =>
                {
                    b.HasOne("Jogoteca.Models.Entities.Game", "BorrowedGame")
                        .WithMany()
                        .HasForeignKey("BorrowedGameId")
                        .HasConstraintName("fk_game_borrowings_games_borrowed_game_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jogoteca.Models.Entities.User", "GameBorrower")
                        .WithMany()
                        .HasForeignKey("GameBorrowerId")
                        .HasConstraintName("fk_game_borrowings_users_game_borrower_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jogoteca.Models.Entities.User", "GameOwner")
                        .WithMany()
                        .HasForeignKey("GameOwnerId")
                        .HasConstraintName("fk_game_borrowings_users_game_owner_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jogoteca.Models.Entities.UserGame", b =>
                {
                    b.HasOne("Jogoteca.Models.Entities.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .HasConstraintName("fk_user_games_games_game_id");

                    b.HasOne("Jogoteca.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_user_games_users_user_id");
                });
#pragma warning restore 612, 618
        }
    }
}
